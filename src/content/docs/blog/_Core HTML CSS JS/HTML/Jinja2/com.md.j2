{# #}	Comments
j.exp, {{ }}	Expressions
{% statement %}	Statements
{% block name} {% endblock %}	Blocks


# If statements
Snippets	Output	Desciption

{% if condition } {% endif %}	if statement
{% if condition } {% else} {% endif %}	if and else statement
{% if condition } {% elif condition2 } {% else} {% endif %}	if, elif and else statement
{% if iterable }{% for item in iterable %} {% endfor %}{% endif %}	for loop in a if statement

# For and with statements

Snippets	Output	Desciption
{% for item in iterable %} {% endfor %}	for statement

{% for item in iterable %}{% if item } {% endif %}{% endfor %}	if statement in a for loop
{% for item in iterable %} {% else %} {% endfor %}	else break statement in a for loop

{% with item} %} {% endwith %}	with statements



# Extendsn, Inclides and Imports

Snippets	Output	Desciption
{% extends 'filename' %}	template inheritance
{% include 'filename' %}	include a template into the current namespace. Tabstops Choice: ignore missing, with context, ignore missing with context
{% import 'filename' %}	import module into current namespace. Tabstops Choice: with context
{% from 'template' import 'module' } %}	import specific names from a template into the current namespace. Tabstops Choice: with context


# Macros, Call, Filters
Snippets	Output	Desciption

{% macro name(args) %} {% endmacro %}	define macro/function
{% call macroname(args}) %} {% endcall %}	call functionality for macro/function
{% filter filtername %} {% endfilter %}	apply regular jinja filters


# Assignments

Snippets	Output	Desciption
{% set variable = value %} {% endset %}	assign value to variable
{% set key, value = callable() %} {% endset %}	assign key, value returned by a callable
{% set variable %} contents {% endset %}	block assignments: capture the contents of block into variable


# lipsum, Random and Url
Snippets	Output	Desciption

{{ lipsum(n=5, html=True, min=20, max=100) }}	generate some lorem ipsum.

{{ range(0, 10000, 1) | random }}	generate random item from a range

{{ url_for('endpoint') }}	url for endpoint (flask)